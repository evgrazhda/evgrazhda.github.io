<!DOCTYPE html>
<html lang="en">
<!-- Quick self-contained page for a presentation. -->
<head>
  <title>Structures by protocols</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, user-scalable=no, 
				 minimum-scale=1.0, maximum-scale=1.0">
  <style>
    html, body {
      margin: 0;
      padding: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: #000022;
    }

    h3 {
      color: lightgrey;
    }

    table {
	align: center;  
    }
  </style>
</head>
<body>
  <!-- NGL host.-->
  <script src="https://unpkg.com/ngl@0.10.4/dist/ngl.js"></script>
     
  <!-- http://nglviewer.org/ngl/api/manual/usage/interaction-controls.html#automatic-view -->

  <script>
    document.addEventListener("DOMContentLoaded", function () {
	var stage = new NGL.Stage("viewport_template");
	var pa;
        stage.loadFile(
         "https://raw.githubusercontent.com/evgrazhda/evgrazhda.github.io/master/proteins/data/1u19_A.pdb"
	).then(
            function (o) {
		o.addRepresentation("cartoon");
		stage.setSpin(true);
		// o.setRotation([0, 3, 0]);
		/*
		var m = new NGL.Matrix4().fromArray([
		    0.37052103877067566, -0.767203152179718, -0.523558497428894, 5.637778804792617,
		    0.7545229196548462, 0.5773427486419678, -0.31204256415367126, -24.06012924949303,
		    0.5416727066040039, -0.2794185280799866, 0.7927899956703186, 16.711468699356146,
		    0.0, 0.0, 0.0, 1.0
		]).transpose();
		o.setTransform(m);
		o.autoView(1000);*/
		pa = o.structure.getPrincipalAxes();
		stage.animationControls.rotate(pa.getRotationQuaternion(), 0);
		o.setRotation([0.8, 3, 0]);
		o.autoView(1000);
		o.setScale(1.15);
            });
    });

   // Yikes!
   document.addEventListener("DOMContentLoaded", function () {
	var stage = new NGL.Stage("viewport_target");
	var pa;
	stage.loadFile(
	    "https://raw.githubusercontent.com/evgrazhda/evgrazhda.github.io/master/proteins/data/target.pdb"
	).then(
            function (o) {
		// o.addRepresentation("cartoon", {color: "lightgrey"});
		o.addRepresentation("cartoon", {color: "tomato"});
		// o.addRepresentation("licorice", {colorScheme: "bfactor"});
		// o.addRepresentation("cartoon", {color: "rgb(111, 222, 78)"});
		o.autoView(1000);
		pa = o.structure.getPrincipalAxes();
		stage.animationControls.rotate(pa.getRotationQuaternion(), 1500);
		stage.setSpin(true);
		o.setRotation([0, 3, 0]);
            });
   });

   <!-- --> 
   document.addEventListener("DOMContentLoaded", function () {
	var stage = new NGL.Stage("viewport_blank");
	var pa;
	stage.loadFile(
	    "https://raw.githubusercontent.com/evgrazhda/evgrazhda.github.io/master/proteins/data/blank.b_factor_by_component.pdb"
	).then(
            function (o) {
		// o.addRepresentation("cartoon", {color: "lightgrey"});
		// o.addRepresentation("cartoon", {color: "tomato"});
		o.addRepresentation("cartoon", {colorScheme: "bfactor"});
		// o.addRepresentation("cartoon", {color: "rgb(111, 222, 78)"});
		o.autoView(1000);
		pa = o.structure.getPrincipalAxes();
		stage.animationControls.rotate(pa.getRotationQuaternion(), 1500);
		stage.setSpin(true);
		o.setRotation([0.8, 3, 0.1]);
		o.autoView(1000);
		o.setScale(1.2);
            });
    });

   document.addEventListener("DOMContentLoaded", function () {
	var stage = new NGL.Stage("viewport_model");
	var pa;
        stage.loadFile(
         "https://raw.githubusercontent.com/evgrazhda/evgrazhda.github.io/master/proteins/data/betadr.B99990001.pdb"
	).then(
            function (o) {
		o.addRepresentation("cartoon", {color: "darkgreen"});
		o.autoView(1000);
		pa = o.structure.getPrincipalAxes();
		stage.animationControls.rotate(pa.getRotationQuaternion(), 1500);
		stage.setSpin(true);
		o.setRotation([0.8, 3, 0]);
		o.autoView(1000);
		o.setScale(1.2);
            });
   });

   <!-- FIXME: div ids!-->
   document.addEventListener("DOMContentLoaded", function () {
	var stage = new NGL.Stage("viewport_model2");
	var pa;
        stage.loadFile(
         "https://raw.githubusercontent.com/evgrazhda/evgrazhda.github.io/master/proteins/data/betadr.B99990001.pdb"
	).then(
            function (o) {
		o.addRepresentation("cartoon", {color: "darkgreen"});
		o.autoView(1000);
		pa = o.structure.getPrincipalAxes();
		stage.animationControls.rotate(pa.getRotationQuaternion(), 1500);
		stage.setSpin(true);
		o.setRotation([0.8, 3, 0]);
		o.setScale(1.1);
            });
    });

   document.addEventListener("DOMContentLoaded", function () {
	var stage = new NGL.Stage("viewport_target2");
	var pa;
	stage.loadFile(
	    "https://raw.githubusercontent.com/evgrazhda/evgrazhda.github.io/master/proteins/data/target.pdb"
	).then(
            function (o) {		
		// o.addRepresentation("cartoon", {color: "lightgrey"});
		o.addRepresentation("cartoon", {color: "tomato"});
		// o.addRepresentation("licorice", {colorScheme: "bfactor"});
		// o.addRepresentation("cartoon", {color: "rgb(111, 222, 78)"});
		o.autoView(1000);
		pa = o.structure.getPrincipalAxes();
		stage.animationControls.rotate(pa.getRotationQuaternion(), 1500);
		stage.setSpin(true);
		o.setRotation([0, 3, 0]);
            });
   });

  </script>

  <table align="center">
    <tr height="650">
      <td>
        <div id="viewport_template" style="height: 600px; width: 600px;">
          <h3 align="center"> Template: 1u19 (Rhodopsin) </h3>
        </div>
      </td>

      <td>
        <div id="viewport_target" style="height: 600px; width: 600px;">
          <h3 align="center"> Target: 3ny8 (&beta;2 adr) </h3>
        </div>
      </td>    
    </tr>
    <tr height="665">
      <td>
        <div id="viewport_blank" style="height: 600px; width: 600px;">
          <h3 align="center"> "Blank" model </h3>
        </div>
      </td>

      <td>
        <div id="viewport_model" style="height: 600px; width: 600px;">
          <h3 align="center"> Model with additional restraints </h3>
        </div>
      </td>    
    </tr>
    <tr height="665">
      <td>
        <div id="viewport_model2" style="height: 600px; width: 600px;">
          <h3 align="center"> Model with additional restraints </h3>
        </div>
      </td>

      <td>
        <div id="viewport_target2" style="height: 600px; width: 600px;">
          <h3 align="center"> Target: 3ny8 (&beta;2 adr) </h3>
        </div>
      </td>    
    </tr>

  </table>


</body>
</html>
